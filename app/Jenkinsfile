pipeline {
    agent any
    environment {
        REGISTRY = 'mbarrionuevok8s'
        DOCKER_HUB_LOGIN = credentials('dockerHub')
        RESULT = '/app/result'
        VOTE = '/app/vote'
        WORKER = '/app/worker'
    }
    stages { // el principal donde se arman la tuberia CI
        stage('control')
                {
            steps {
                sh  '''
                        ls
                        cd app
                        ls -la
                    '''
            }
                }

        stage('Build') {
                parallel {
                    stage('result')
                {
                        steps {
                            dir("$RESULT") {
                                sh '''
                                docker build -t $REGISTRY/result:v1 .
                            '''
                            }
                        }
                }
                    stage('vote')
                {
                        steps {
                            dir("$VOTE") {
                                sh '''
                                  docker build -t $REGISTRY/vote:v1 .
                                '''
                            }
                        }
                }
                    stage('worker')
                {
                        steps {
                            dir("$WORKER") {
                                sh  '''
                                 docker build -t $REGISTRY/worker:v1 .
                                '''
                            }
                        }
                }
                }
        }
        stage('deploy') {
                steps {
                    sh  '''
                    docker login --username=$DOCKER_HUB_LOGIN_USR --password=$DOCKER_HUB_LOGIN_PSW
                    docker push $REGISTRY/result:v1
                    docker push $REGISTRY/vote:v1
                    docker push $REGISTRY/worker:v1
                    '''
                }
        }
    } //fin stage principal
}
