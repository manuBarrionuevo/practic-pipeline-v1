pipeline {
    agent any
    environment {
        REGISTRY = 'mbarrionuevok8s'
        DOCKER_HUB_LOGIN = credentials('dockerHub')
        RESULT = 'app/result'
        VOTE = 'app/vote'
        WORKER = 'app/worker'
    }
    stages {
        stage('version') {
            steps {
                script {
                    def changelog_file = "app/CHANGELOG.md"
                    def version_pattern = "## \\[[0-9]*\\."
                    def version_line = sh(script: "grep -E \"$version_pattern\" \"$changelog_file\" | head -n 1", returnStdout: true).trim()
                    def version = version_line =~ /\[([0-9]+\.[0-9]+\.[0-9]+)\]/
                    echo "Versi√≥n encontrada en el changelog: ${version[0][1]}"
                }
            }
        }
        stage('Build') {
            parallel {
                stage('result') {
                    steps {
                        dir("$RESULT") {
                            sh '''
                                docker build -t $REGISTRY/$version .
                            '''
                        }
                    }
                }
                stage('vote') {
                    steps {
                        dir("$VOTE") {
                            sh '''
                                docker build -t $REGISTRY/$version .
                            '''
                        }
                    }
                }
                stage('worker') {
                    steps {
                        dir("$WORKER") {
                            sh  '''
                                docker build -t $REGISTRY/$version .
                            '''
                        }
                    }
                }
            }
        }
        stage('deploy') {
            steps {
                sh  '''
                    docker login --username=$DOCKER_HUB_LOGIN_USR --password=$DOCKER_HUB_LOGIN_PSW
                    docker push $REGISTRY/result:v1
                    docker push $REGISTRY/vote:v1
                    docker push $REGISTRY/worker:v1
                '''
            }
        }
    }
}
