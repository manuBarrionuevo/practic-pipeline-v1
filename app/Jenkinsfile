pipeline {
    agent any
    environment {
        REGISTRY = 'mbarrionuevok8s'
        DOCKER_HUB_LOGIN = credentials('dockerHub')
        RESULT = 'app/result'
        VOTE = 'app/vote'
        WORKER = 'app/worker'
    }
    stages {
        stage('Build') {
            stage('version') {
                steps {
                    sh """
                        changelog_file='app/CHANGELOG.md'
                        version_pattern='## \\[[0-9]*\\.[0-9]*\\.[0-9]*\\]'
                        version_line=\$(grep -E "\$version_pattern" "\$changelog_file" | head -n 1)
                        version=\$(echo "\$version_line" | grep -oE "[0-9]*\\.[0-9]*\\.[0-9]*")
                        echo "Versi√≥n encontrada en el changelog: \$version"
                    """
                }
            }
            parallel {
                stage('result') {
                    steps {
                        dir("$RESULT") {
                            sh """
                                docker build -t $REGISTRY/$version .
                            """
                        }
                    }
                }
                stage('vote') {
                    steps {
                        dir("$VOTE") {
                            sh """
                                docker build -t $REGISTRY/$version .
                            """
                        }
                    }
                }
                stage('worker') {
                    steps {
                        dir("$WORKER") {
                            sh  """
                                docker build -t $REGISTRY/$version .
                            """
                        }
                    }
                }
            }
        }
        stage('deploy') {
            steps {
                sh  """
                    docker login --username=$DOCKER_HUB_LOGIN_USR --password=$DOCKER_HUB_LOGIN_PSW
                    docker push $REGISTRY/result:$version
                    docker push $REGISTRY/vote:$version
                    docker push $REGISTRY/worker:$version
                """
            }
        }
    }
}
